// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wall_Net.DataAccess;

#nullable disable

namespace Wall_Net.Migrations
{
    [DbContext(typeof(WallNetDbContext))]
    [Migration("20231107081058_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Wall_Net.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 11, 7, 5, 10, 58, 680, DateTimeKind.Local).AddTicks(6053),
                            IsBlocked = false,
                            Money = 1000m,
                            User_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 11, 7, 5, 10, 58, 680, DateTimeKind.Local).AddTicks(6064),
                            IsBlocked = false,
                            Money = 1000m,
                            User_Id = 1
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 11, 7, 5, 10, 58, 680, DateTimeKind.Local).AddTicks(6065),
                            IsBlocked = false,
                            Money = 1000m,
                            User_Id = 1
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 11, 7, 5, 10, 58, 680, DateTimeKind.Local).AddTicks(6066),
                            IsBlocked = false,
                            Money = 1000m,
                            User_Id = 1
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 11, 7, 5, 10, 58, 680, DateTimeKind.Local).AddTicks(6068),
                            IsBlocked = false,
                            Money = 1000m,
                            User_Id = 1
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 11, 7, 5, 10, 58, 680, DateTimeKind.Local).AddTicks(6072),
                            IsBlocked = false,
                            Money = 1000m,
                            User_Id = 1
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 11, 7, 5, 10, 58, 680, DateTimeKind.Local).AddTicks(6073),
                            IsBlocked = false,
                            Money = 1000m,
                            User_Id = 1
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2023, 11, 7, 5, 10, 58, 680, DateTimeKind.Local).AddTicks(6074),
                            IsBlocked = false,
                            Money = 1000m,
                            User_Id = 1
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2023, 11, 7, 5, 10, 58, 680, DateTimeKind.Local).AddTicks(6075),
                            IsBlocked = false,
                            Money = 1000m,
                            User_Id = 1
                        });
                });

            modelBuilder.Entity("Wall_Net.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Encargado de agregar y borrar usuarios",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cliente nuevo",
                            Name = "Regular"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Administrador de las transacciones",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Cliente antiguo",
                            Name = "Regular"
                        });
                });

            modelBuilder.Entity("Wall_Net.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Rol_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "lean@email.com",
                            FirstName = "Leandro",
                            LastName = "Mumbach",
                            Password = "123456",
                            Points = 20,
                            Rol_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "pepe@email.com",
                            FirstName = "Pepe",
                            LastName = "Gonzalez",
                            Password = "123456",
                            Points = 20,
                            Rol_Id = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
